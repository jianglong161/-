232
1.为什么查询速度会变慢
	真正重要的是响应时间
	如果要优化查询
		实际上是优化其子任务
		要么消除其中一些子任务
		要么减少子任务的执行次数
		要么让子任务执行的更快
2.慢查询基础：优化数据访问
	查询性能低下最基本原因是访问的数据太多
	对于低性能查询需要分析两个步骤：
		1.确认应用程序是否在检索大量超过需要的数据
		2.确认MySQL服务器层是否在分析大量超过需要的数据行。
	2.1.是否向数据库请求了不需要的数据
		查询不需要的记录
			MySQl却是先返回全部结果在进行计算
			分页的时候在查询的后面加入limit
		多表关联的时候返回全部列
		重复查询相同的数据
			查询的时候将数据缓存起来，需要的时候从缓存中取出，这样性能更好
	2.2.MySQL是否在扫描额外的记录
		在确定只返回的数据以后，
		查询为了返回结果是否扫描了过多的数据
		对于MYSQL,最简单衡量查询开销的三个指标：
			响应时间：
				服务时间
					数据库处理这个查询花了多少时间
				排队时间
					因为等待某些资源而没有真正执行查询时间
				可以通过快速上限估计来估算查询的响应时间
			扫描行数
			返回行数
		扫描行数与访问类型
			评估查询开销的时候，需要考虑一下从表中找到某一行数据的成本
			在Explan语句中type列反映了访问类型
			访问类型：
				全表扫描
				索引扫描
				范围扫描
				唯一索引查询
				常数引用
				速度由慢到快，扫描的行数也是由小到大
			如果查询没有办法找到合适的访问类型，那么解决问题的办法是通常增加一个合适的索引。
			索引让MySql以最高效，扫描行数最少的方式找到需要的记录
			一般MYSQL能够使用如下3种方式应用where条件，从好到坏：
				1.在索引中使用where语句来过滤不匹配的记录，这时在存储引擎中完成的
				2.使用索引覆盖扫描(在Extra中出现了Using index)来返回记录
				  直接从索引中过滤不需要的记录并返回命中的结果，是在MySQ服务器中完成的，但是无需再回表中查询记录
				3.从数据表中返回记录，然后过滤不满足的记录(在Extra中出现 Using where)
				  这在MySql服务器中完成的，MySql需要先从数据表中读出记录，然后过滤。
			如果发现查询需要扫描大量的数据只是返回少数的行，那么通常可以尝试下面的技巧去优化它
				使用索引覆盖扫描，把所有需要的列都放到索引中，那这样存储引擎无须回表获取对应行就可以返回结果
				改变库表的结构。例如使用单独的汇总表
				重写这个复杂的查询