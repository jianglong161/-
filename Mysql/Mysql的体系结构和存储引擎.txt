MySql
Mysql的体系结构和存储引擎
1.1定义数据库和实例
	数据库：frm,MYD,MYI,ibd,结尾的文件，当使用NDB引擎的时候，数据库文件放在内存中
	实例：后台线程和共享内存组成。共享内存可以运行的后台现成共享，数据库实例才是真正操作数据库的
	实例和数据库的关系是一一对应的。
	MySql是单进程多线程架构的数据库，实例在系统中的表现就是一个 进程。
	与Oracle的参数文件spfile相似，不同Oracle如果没有参数文件，在启动实例的时候，数据库失败。
	Mysql的组成：
		连接池组件
		管理服务和工具组件
		sql接口组件
		查询分析器组件
		优化组件
		缓冲Cache组件
		插件式存储引擎
		物理文件
	存储引擎是基于表结构的，而不是数据库
1.3Mysql存储引擎
	Mysql预定义的存储引擎接口编写自己的存储引擎
	InnoDB存储引擎
		支持事物，设计目标主要是面向在线事物处理的应用，特点是行锁设计，支持外键，支持类似Oracle的非锁定读，默认读写操作不会产生锁
		放在了一个逻辑表空间中，存储引擎的表单独放到一个独立的ibd文件之中
		对于表中的存储，采取了聚集的方式
	MyISAM存储引擎
		不支持事物，表所设计，支持全文索引。面向一些OLAP数据库应用
		缓冲池只是缓存一些索引文件，不缓冲数据文件
		引擎表是由MYD和MYI组成，MYD是用来存放数据文件，MYI用来存放索引文件，可以使用myismpack工具来进一步压缩文件
	NDB引擎
		是一个集群存储引擎，其结构是share noting的集群结构，数据全部放在内存中，主键查找的速度极快
		并且通过添加NDB数据存储节点，线性提高数据库性能，高可用，高性能的集群系统。
	Memory引擎
		表中的数据存放到内存之中，如果数据库重启或者崩溃，表中的数据全部消失。适用于存储临时表
		默认使用哈希索引，不是B+树索引。
		只支持表锁，并发性能比较差
	Archeive存储引擎
		采用zlib算法进行压缩后存储。非常适合存储过当数据，如日志信息
		使用行锁来实现高并发的插入操作
		主要提供高速的插入和压缩功能。
	Federate存储引擎
		引擎表并不存放数据，只是指向一台mysql数据库的服务器上，不支持异构数据库的表
	Maria存储引擎
		取代原有的MyiSAM存储引擎，从而成为Mysql的默认引擎
		支持缓存数据和索引文件，应用了行锁设计，提供了MVCC功能，支持事物和非事物安全的选项
		
	通过show engines 查询mysql数据库所支持的存储引擎
1.4连接Mysq
	是一个连接进程和Mysql数据库实例进行通信
	常用的通信方式：有管道，命名管道，命名字，TCP/IP套接字，UNIX域套接字
	TCPIP：
		mysql -h192.168.0.0.1 -u david -p
		Mysql会检查一张权限视图，用来判断请求的ip是否允许连接到Mysql实例，表为user
	命名管道和共享内存
		在mysql配置文件中启动--enable>name-pipe
		提供共享内存，在配置文件中，添加--shard-Memory实现
	UNIX套接字
		mysql -udavid -S /tmp/mysql.sock
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	