对象及变量的并发访问
2.1.synchronized同步方法
	2.1.1.方法内的变量为线程安全
		非线程安全的问题存在与实例变量，如果是方法内部的私有变量，则不存在非线程安全。
	2.1.2.实例变量非线程安全
	2.1.3.多个对象多个锁
		关键字synchronized取得的锁都是对象锁，而不是把一段代买或函数当作锁
		 所以，哪个线程先执行带synchronized关键字方法,哪个线程就持有该方法所属对象的锁Lock
		 那么其他线程只能呈等待状态，前提是多个线程访问的是同一个对象
		如果多个线程访问多个对象，则jvm就会创建多个锁。
	2.1.4.synchronized方法与锁对象
		调用关键字synchronized()一定是排队运行的。
		只有共享资源的读写才需要同步
		A线程先持有object对象的Lock锁，B线程可以以异步的方式调用object对象中的非synchronized类型的方法
		A线程先持有object对象Lock锁，B线程如果在时调用对象中的synchronized类型的方法则需等待，也就是同步